
* Automatic package installation
  #+begin_src emacs-lisp
    (require 'package)
    (package-initialize)

    ;; add extra sources to the package archives
    (setq package-archives
          '(("gnu" . "http://elpa.gnu.org/packages/")
            ("melpa" . "http://melpa.milkbox.net/packages/")
            ("marmalade" . "http://marmalade-repo.org/packages/")))

    ;; assumes that load path is always at default...
    (add-to-list 'load-path "~/.emacs.d/use-package")
    (require 'use-package)
    (setq use-package-always-ensure t)
  #+end_src

* Appearance
  These lines of code disable most of the gui elements used in emacs
  so you can get so much more of that sweet, sweet text on your screen.
  #+begin_src emacs-lisp
  (if (fboundp 'menu-bar-mode) (menu-bar-mode -1))
  (if (fboundp 'tool-bar-mode) (tool-bar-mode -1))
  (if (fboundp 'scroll-bar-mode) (scroll-bar-mode -1))
  (setq inhibit-splash-screen t)
  (setq initial-scratch-message "")
  (setq inhibit-startup-message t)
  #+end_src

** Theme
   The theme that I use, nice for high contrast stuff.
   #+begin_src emacs-lisp
     (use-package grandshell
                  :ensure grandshell-theme
                  :init
                  (load-theme 'grandshell t))

   #+end_src

* Extensions
** Magit
   #+begin_src emacs-lisp
     (use-package magit
       :commands magit-status
       :init
       (setq magit-last-seen-setup-instructions "1.4.0")
       :bind
       ("<f7>" . magit-status))

   #+end_src

** ivy
   Replacement for ido/smex etc.
   #+begin_src emacs-lisp
     (use-package ivy
       :init
       (ivy-mode 1)
       (setq ivy-use-virtual-buffers t)
       (setq ivy-height 10)
       (setq ivy-count-format "(%d/%d)")
       (setq ivy-re-builders-alist
           '((read-file-name-internal . ivy--regex-fuzzy)
             (t . ivy--regex-plus)))
       :config
       (setq magit-completing-read-function 'ivy-completing-read)
       :bind
       (:map ivy-minibuffer-map
             ("[tab]" . ivy-alt-done)))

   #+end_src

** Projectile
   Project management stuff.
   #+begin_src emacs-lisp
     (use-package projectile
       :init
       (projectile-global-mode)
       :config
       (setq projectile-completion-system 'ivy))
   #+end_src
** company-mode
   auto completion stuff.
   #+begin_src emacs-lisp
     (use-package company
       :init
       (global-company-mode))
   #+end_src

** yasnippet
   snippet expansion.
   #+begin_src emacs-lisp
     (use-package yasnippet
       :config
       (yas-global-mode 1)
       (yas-reload-all)
       (setq yas-snippet-dirs (append yas-snippet-dirs
                                      '("~/.emacs.d/snippets" "~/.emacs.d/yasnippets-snippets"))))
   #+end_src
** Visual indentation guides
   #+begin_src emacs-lisp
     (use-package indent-guide
       :config
       (add-hook 'prog-mode-hook 'indent-guide-mode)
       (setq indent-guide-recursive t))
   #+end_src
** Parentheses matching
   #+begin_src emacs-lisp
     (use-package smartparens-config
       :ensure smartparens
       :init
       (smartparens-global-strict-mode)
       :config
       (setq sp-autoescape-string-quote-if-empty t))
       
   #+end_src
